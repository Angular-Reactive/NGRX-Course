{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/auth/resources/auth.service\";\nimport * as i2 from \"../resources/mock-api-cart.service\";\nimport * as i3 from \"ngx-alerts\";\nimport * as i4 from \"ngx-spinner\";\nexport let CartButtonWidgetComponent = /*#__PURE__*/(() => {\n  class CartButtonWidgetComponent {\n    constructor(authService, cartService, alertService, spinner) {\n      this.authService = authService;\n      this.cartService = cartService;\n      this.alertService = alertService;\n      this.spinner = spinner;\n      this.selectedColor = 'primary';\n      this.primaryColor = 'success';\n      this.removeColor = 'danger';\n      this.cartIconAdd = 'fas fa-cart-plus';\n      this.cartIconRemove = 'fas fa-shopping-cart';\n      this.icon = this.cartIconAdd;\n      this.color = this.primaryColor;\n    }\n\n    ngOnInit() {\n      const observer = {\n        next: user => {\n          this.user = user;\n        },\n        error: err => console.error(err)\n      };\n      this.authService.user.subscribe(observer);\n\n      if (this.user.id) {\n        const observer = {\n          next: cart => {\n            this.cart = cart;\n          },\n          error: err => console.error(err)\n        };\n        this.cartService.cart.subscribe(observer);\n        this.setButtonSettings();\n      }\n    }\n\n    updateCartApi() {\n      this.spinner.show();\n      const cartObserver = {\n        next: cart => {\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1000);\n          this.cartService.updatedCartSelection(cart);\n          setTimeout(() => {\n            this.alertService.success('Cart Updated');\n          }, 1000);\n        },\n        error: err => {\n          this.alertService.danger('Unable to Update Shopping Cart');\n          this.spinner.hide();\n        }\n      };\n      this.cartService.updateCart(this.cart.id, this.cart).subscribe(cartObserver);\n    }\n\n    manageCartlist() {\n      this.color = this.primaryColor;\n      this.icon = this.cartIconAdd;\n\n      if (!this.user.id) {\n        this.alertService.danger('Please login to add to Shopping Cart');\n        return;\n      }\n\n      for (let index = 0; index < this.cart.products.length; index++) {\n        if (this.cart.products[index].id == this.product.id) {\n          this.alertService.info('Removing Product From Shopping Cart');\n          this.cart.products.splice(index, 1);\n          this.updateCartApi();\n          this.setButtonSettings();\n          return;\n        }\n      }\n\n      this.alertService.info('Adding Product To Shopping Cart');\n      this.cart.products.push(this.product);\n      this.updateCartApi();\n      this.setButtonSettings();\n    }\n\n    setButtonSettings() {\n      if (this.cart.products) {\n        for (let index = 0; index < this.cart.products.length; index++) {\n          if (this.cart.products[index].id == this.product.id) {\n            this.color = this.selectedColor;\n            this.icon = this.cartIconRemove;\n          }\n        }\n      }\n    }\n\n  }\n\n  CartButtonWidgetComponent.ɵfac = function CartButtonWidgetComponent_Factory(t) {\n    return new (t || CartButtonWidgetComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.MockApiCartService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService));\n  };\n\n  CartButtonWidgetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartButtonWidgetComponent,\n    selectors: [[\"app-cart-button-widget\"]],\n    inputs: {\n      product: \"product\",\n      text: \"text\"\n    },\n    decls: 3,\n    vars: 7,\n    consts: [[\"type\", \"button\", \"title\", \"Add/Remove Shopping Cart\", 3, \"click\"]],\n    template: function CartButtonWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CartButtonWidgetComponent_Template_button_click_0_listener() {\n          return ctx.manageCartlist();\n        });\n        i0.ɵɵelement(1, \"i\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMapInterpolate1(\"btn btn-\", ctx.color, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(ctx.icon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.text, \"\");\n      }\n    }\n  });\n  return CartButtonWidgetComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}