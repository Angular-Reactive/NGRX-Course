{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let PaginationService = /*#__PURE__*/(() => {\n  class PaginationService {\n    constructor() {\n      this.pagination = {\n        first: null,\n        next: null,\n        last: null,\n        prev: null\n      };\n    }\n\n    parseReturnedPaginationUrls(data) {\n      var linkRegex = /\\<([^>]+)/g;\n      var relRegex = /rel=\"([^\"]+)/g;\n      var linkArray = [];\n      var relArray = [];\n      var finalResult = this.pagination;\n      var temp;\n\n      while ((temp = linkRegex.exec(data)) != null) {\n        linkArray.push(temp[1]);\n      }\n\n      while ((temp = relRegex.exec(data)) != null) {\n        relArray.push(temp[1]);\n      }\n\n      finalResult = relArray.reduce((object, value, index) => {\n        object[value] = linkArray[index];\n        return object;\n      }, {});\n      return finalResult;\n    }\n\n    createUrl(pricemin = '0', pricemax = '999', page = '1', limit = '9', baseurl) {\n      var prepend = ''; //var query = this.baseUrl + 'products?';\n\n      var query = baseurl;\n\n      if (pricemin) {\n        query = `${query}` + prepend + `price_gte=${pricemin}`;\n        prepend = '&';\n      }\n\n      if (pricemax) {\n        query = `${query}` + prepend + `price_lte=${pricemax}`;\n        prepend = '&';\n      }\n\n      if (page) {\n        query = `${query}` + prepend + `_page=${page}`;\n        prepend = '&';\n      }\n\n      if (page) {\n        query = `${query}` + prepend + `_limit=${limit}`;\n        prepend = '&';\n      }\n\n      query = `${query}` + prepend + `_sort=price`;\n      return query;\n    }\n\n  }\n\n  PaginationService.ɵfac = function PaginationService_Factory(t) {\n    return new (t || PaginationService)();\n  };\n\n  PaginationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaginationService,\n    factory: PaginationService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaginationService;\n})();","map":null,"metadata":{},"sourceType":"module"}