{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/pagination.service\";\nexport let MockProductApiService = /*#__PURE__*/(() => {\n  class MockProductApiService {\n    /********************************************************************************** */\n    // This is a mock service, Don't use examples on this page in production code. Some APIs\n    //  might be totally fake, and Some business logic usually handled on the server\n    //   will be done on this page. This page is designed to give a back fake data.\n\n    /********************************************************************************** */\n    constructor(http, pagination) {\n      this.http = http;\n      this.pagination = pagination;\n      this.baseUrl = 'http://localhost:3000/';\n    }\n\n    createProduct(model) {\n      return this.http.post(this.baseUrl + 'products', model);\n    }\n\n    getProducts(url) {\n      let paginatedResult = {\n        result: undefined,\n        pagination: undefined\n      };\n      return this.http.get(url, {\n        observe: 'response'\n      }).pipe(map(response => {\n        paginatedResult.result = response.body;\n        paginatedResult.pagination = this.pagination.parseReturnedPaginationUrls(response.headers.get('Link'));\n        return paginatedResult;\n      }));\n    }\n\n    getAllProducts() {\n      return this.http.get(this.baseUrl + 'products');\n    }\n\n    getProduct(productId) {\n      return this.http.get(this.baseUrl + 'products/' + productId);\n    }\n\n    editProduct(model) {\n      return this.http.put(this.baseUrl + 'products/' + model.id, model);\n    }\n\n    deleteProduct(productId) {\n      return this.http.delete(this.baseUrl + 'products/' + productId);\n    }\n\n  }\n\n  MockProductApiService.ɵfac = function MockProductApiService_Factory(t) {\n    return new (t || MockProductApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.PaginationService));\n  };\n\n  MockProductApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MockProductApiService,\n    factory: MockProductApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MockProductApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}