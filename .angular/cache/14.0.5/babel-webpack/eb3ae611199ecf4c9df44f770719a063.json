{"ast":null,"code":"import * as fromAuthModels from './auth';\nimport { of, BehaviorSubject, throwError } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      /********************************************************************************** */\n      // This is a mock service, Don't use examples on this page in production code. Some APIs\n      //  might be totally fake, and Some business logic usually handled on the server\n      //   will be done on this page. This page is designed to give a back fake data.\n\n      /********************************************************************************** */\n\n      this.baseUrl = 'http://localhost:3000/users/';\n      this.userSource = new BehaviorSubject(fromAuthModels.UserModel);\n      this.user = this.userSource.asObservable();\n    } //Fake Login API\n\n\n    login(username, password) {\n      return this.http.get(this.baseUrl + '?username=' + username).pipe(switchMap(users => {\n        let user = users[0];\n\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          return of(user);\n        } else {\n          return throwError('Unable to login');\n        }\n      }));\n    }\n\n    updatedUserSelection(user) {\n      this.userSource.next(user);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}